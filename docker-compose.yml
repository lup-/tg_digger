version: "3"

services:
  admin:
    image: nginx
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./frontend/dist:/var/www/public
      - ./etc/nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  backend:
    image: node
    depends_on:
      - mongo
    volumes:
      - ./backend:/var/www
    ports:
      - ${BACKEND_DEBUG_PORT}:9229
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=mongo
      - MONGO_DB=digger
    command: node --inspect=0.0.0.0 server.js

  digger:
    build:
      context: "."
      dockerfile: "./etc/build/Dockerfile_tdlib"
    ports:
      - ${BOT_DEBUG_PORT}:9229
      - ${BOT_HTTP_PORT}:3000
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/bot
    working_dir: /var/bot
    environment:
      - MONGO_HOST=mongo
      - MONGO_DB=digger
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - AUTH_PHONE=${AUTH_PHONE}
      - TDJSONLIB_PATH=${TDJSONLIB_PATH}
    command: npm run start

  textractor:
    build:
      context: "."
      dockerfile: "./etc/build/Dockerfile_textractor"
    ports:
      - ${TEXTRACTOR_PORT}:5000
    volumes:
      - ./textractor:/var/www
    working_dir: /var/www
    environment:
      PORT: 5000
      FLASK_DEBUG: 1
    command: python server.py

  mongo:
    image: mongo
    volumes:
      - ./etc/database:/data/db
    ports:
      - ${MONGO_PORT}:27017