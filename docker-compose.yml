version: "3"

services:
  nginx:
    image: nginx
    restart: ${RESTART}
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./frontend/dist:/var/www/public
      - ./admin/dist:/var/www/admin
      - ./etc/nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  backend:
    image: node
    restart: ${RESTART}
    depends_on:
      - mongo
      - telegram
      - redis
    volumes:
      - ./backend:/var/www
    ports:
      - ${BACKEND_DEBUG_PORT}:9229
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=mongo
      - MONGO_DB=digger
      - TELEGRAM_GATEWAY_URL=${TELEGRAM_GATEWAY_URL}
      - REDIS=redis
    command: node --inspect=0.0.0.0 server.js

  scanner:
    image: node
    restart: ${RESTART}
    depends_on:
      - mongo
      - telegram
    volumes:
      - ./backend:/var/www
    ports:
      - ${SCANNER_DEBUG_PORT}:9229
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=mongo
      - MONGO_DB=digger
      - TELEGRAM_GATEWAY_URL=${TELEGRAM_GATEWAY_URL}
      - TEXTRACTOR_URL=${TEXTRACTOR_URL}
      - REDIS=redis
    command: node --inspect=0.0.0.0 scanner.js

  textractor:
    restart: ${RESTART}
    build:
      context: "."
      dockerfile: "./etc/build/Dockerfile_textractor"
    ports:
      - ${TEXTRACTOR_PORT}:5000
    volumes:
      - ./textractor:/var/www
    working_dir: /var/www
    environment:
      PORT: 5000
      FLASK_DEBUG: 1
    command: python server.py

  mongo:
    image: mongo:4.2
    restart: ${RESTART}
    volumes:
      - ./etc/database:/data/db
    ports:
      - ${MONGO_PORT}:27017

  telegram:
    restart: ${RESTART}
    build:
      context: "."
      dockerfile: "./etc/build/Dockerfile_telegram"
    ports:
      - ${TELEGRAM_GATEWAY_PORT}:3000
    volumes:
      - ./telegram:/var/www
    working_dir: /var/www
    environment:
      - API_ID=${TELEGRAM_API_ID}
      - API_HASH=${TELEGRAM_API_HASH}
      - PYTHONUNBUFFERED=1
    command: python bot.py

  redis:
    image: redis
    restart: ${RESTART}
    ports:
      - ${REDIS_PORT}:6379